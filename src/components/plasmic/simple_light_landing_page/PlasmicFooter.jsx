// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8EX2syfhb19EPFAeuAzYoB
// Component: 2jMq6OQbnu_x2
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import IconLink from "../../IconLink" // plasmic-import: ql7Q7NEtn7k1A/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: hyBuPfmFqtFxIM/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css" // plasmic-import: 8EX2syfhb19EPFAeuAzYoB/projectcss
import * as sty from "./PlasmicFooter.module.css" // plasmic-import: 2jMq6OQbnu_x2/css
import LogoIcon from "./icons/PlasmicIcon__Logo" // plasmic-import: BvIr5sxt0wmv2i/icon
import IconIcon from "./icons/PlasmicIcon__Icon" // plasmic-import: 7XYT7C062O81zy/icon
import TwitterIconIcon from "./icons/PlasmicIcon__TwitterIcon" // plasmic-import: Xoy8hwrs_mlfZB/icon
import GithubIconIcon from "./icons/PlasmicIcon__GithubIcon" // plasmic-import: 0P0q4ym7S0d_9E/icon
import FacebookIconIcon from "./icons/PlasmicIcon__FacebookIcon" // plasmic-import: t0CoDSdFI2om-2/icon

export const PlasmicFooter__VariantProps = new Array()

export const PlasmicFooter__ArgProps = new Array()

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <div className={classNames(defaultcss.all, sty.box__ikd8O)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box__oaHlQ)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__oKt7L)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__iZmh1)}
            icon={
              <LogoIcon
                className={classNames(defaultcss.all, sty.svg__iNk57)}
                role={"img"}
              />
            }
          />

          <div className={classNames(defaultcss.all, sty.box__x8Gn5)}>
            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__esl5S
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Terms"}
            </p.PlasmicLink>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__dpxy6
              )}
            >
              {" Â· "}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__n9Ldu
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Privacy"}
            </p.PlasmicLink>
          </div>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__d6R1R)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___1UOHg)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__ackXu
              )}
            >
              {"Products"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__hfzmQ
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Web Studio"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__i5AnQ
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"DynamicBox Flex"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__sunEv
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Programming Forms"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__relPf
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Integrations"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__b15Le
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Command-line"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___0SDwu)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box___02XaI
              )}
            >
              {"Resources"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__hoWzX
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Documentation"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__ilqga
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Tutorials & Guides"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__cph1
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Blog"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__xOgcb
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Support Center"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__ui1BI
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Partners"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__hiY93)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__tOd3R
              )}
            >
              {"Company"}
            </div>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__xkHhi
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Home"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link___9Gw3I
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"About us"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__hWn6F
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Company values"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__zfVr1
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Pricing"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__laQqH
              )}
              component={Link}
              href={"#"}
              platform={"gatsby"}
            >
              {"Privacy policy"}
            </p.PlasmicLink>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__cS9Pa)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__c8Hvi
              )}
            >
              {"Subscribe"}
            </div>

            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.box__bCumc
              )}
            >
              {"Get the latest news and articles to your inbox every month."}
            </div>

            <div className={classNames(defaultcss.all, sty.box__caJg0)}>
              <input
                data-plasmic-name={"textbox"}
                data-plasmic-override={overrides.textbox}
                className={classNames(defaultcss.input, sty.textbox)}
                placeholder={"Your email"}
                size={1}
                type={"text"}
                value={""}
              />

              <div className={classNames(defaultcss.all, sty.box__nmqpN)} />

              <button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames(defaultcss.button, sty.button)}
              >
                <IconIcon
                  className={classNames(defaultcss.all, sty.svg__j5Rty)}
                  role={"img"}
                />
              </button>
            </div>
          </p.Stack>
        </p.Stack>
      </p.Stack>

      <div className={classNames(defaultcss.all, sty.box___6Crrl)} />

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.box___1Ortx)}
      >
        <div className={classNames(defaultcss.all, sty.box__mkYpG)}>
          <p.PlasmicLink
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link__vmP5
            )}
            component={Link}
            href={"https://cruip.com/"}
            platform={"gatsby"}
          >
            {"Designed by Cruip. "}
          </p.PlasmicLink>

          <p.PlasmicLink
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link__vxDxp
            )}
            component={Link}
            href={"https://www.plasmic.app/"}
            platform={"gatsby"}
          >
            {"Built in Plasmic. "}
          </p.PlasmicLink>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.box__yDz6T
            )}
          >
            {"All rights reserved."}
          </div>
        </div>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__thlU8)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__lPUeu)}
            icon={
              <TwitterIconIcon
                className={classNames(defaultcss.all, sty.svg__y40Mp)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__gil8E)}
            icon={
              <GithubIconIcon
                className={classNames(defaultcss.all, sty.svg__kZgcs)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__wkwRy)}
            icon={
              <FacebookIconIcon
                className={classNames(defaultcss.all, sty.svg__ykzKx)}
                role={"img"}
              />
            }
          />
        </p.Stack>
      </p.Stack>
    </p.Stack>
  )
}

const PlasmicDescendants = {
  root: ["root", "textbox", "button"],
  textbox: ["textbox"],
  button: ["button"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter"
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`
  }
  return func
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textbox: makeNodeComponent("textbox"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps,
  }
)

export default PlasmicFooter
/* prettier-ignore-end */
