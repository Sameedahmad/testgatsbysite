// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8EX2syfhb19EPFAeuAzYoB
// Component: 9YMc1DcLLnShjC
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: Mz_be9TGTzdoe/component
import Section from "../../Section" // plasmic-import: wCmlgszJLunYg/component
import Bullet from "../../Bullet" // plasmic-import: Yb346u2Ix8Y5jU/component
import LinkButton from "../../LinkButton" // plasmic-import: DZsmJfCyFVvNX-/component
import HomeCta from "../../HomeCta" // plasmic-import: mE-ZwwOgOQy9W/component
import Footer from "../../Footer" // plasmic-import: 2jMq6OQbnu_x2/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: hyBuPfmFqtFxIM/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_simple_light_landing_page.module.css" // plasmic-import: 8EX2syfhb19EPFAeuAzYoB/projectcss
import * as sty from "./PlasmicFeatures.module.css" // plasmic-import: 9YMc1DcLLnShjC/css
import simpleProject5MsVXbHeAr6B9H from "./images/simpleProject.png" // plasmic-import: 5MsVXbHeAr6b9H/picture
import task1EbKyha5DvnC2 from "./images/task.png" // plasmic-import: 1EbKyha5DVN_c2/picture

export const PlasmicFeatures__VariantProps = new Array()

export const PlasmicFeatures__ArgProps = new Array()

function PlasmicFeatures__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__m2GfA)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <Section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames("__wab_instance", sty.section)}
              subtitle={
                "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat."
              }
              title={"The ultimate in feature set."}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__uanI4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__kszUu)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__bTwGy
                  )}
                >
                  {"Powerful suite of tools"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__o2U6A
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__aPyUw)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__dcx46)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet___98NRk)}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box___9H5R
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__meAwh)}
                >
                  <LinkButton text={"Start free trial"} type={"solidBlue"} />

                  <LinkButton text={"View demo"} type={"outlineBlue"} />
                </p.Stack>
              </p.Stack>

              <div className={classNames(defaultcss.all, sty.box__nrT40)}>
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__liM4)}
                  role={"img"}
                  src={simpleProject5MsVXbHeAr6B9H}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__sv0Qd)}
                  role={"img"}
                  src={task1EbKyha5DvnC2}
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__yfCp)}
            >
              <div className={classNames(defaultcss.all, sty.box__iHyOp)}>
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__loC1F)}
                  role={"img"}
                  src={simpleProject5MsVXbHeAr6B9H}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__kJ7G)}
                  role={"img"}
                  src={task1EbKyha5DvnC2}
                />
              </div>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__s6Wgg)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__csWsW
                  )}
                >
                  {"Powerful suite of tools"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__bDvl4
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__hivOm)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__wCbIj)}
                />

                <Bullet
                  className={classNames("__wab_instance", sty.bullet__zGxy)}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__s8IA5
                  )}
                >
                  {
                    "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore pariatur."
                  }
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__uEFr)}
                >
                  <LinkButton text={"Start free trial"} type={"solidBlue"} />

                  <LinkButton text={"View demo"} type={"outlineBlue"} />
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <HomeCta
              data-plasmic-name={"homeCta"}
              data-plasmic-override={overrides.homeCta}
              className={classNames("__wab_instance", sty.homeCta)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: ["root", "header", "section", "homeCta", "footer"],
  header: ["header"],
  section: ["section"],
  homeCta: ["homeCta"],
  footer: ["footer"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFeatures__ArgProps,
      internalVariantPropNames: PlasmicFeatures__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicFeatures__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicFeatures"
  } else {
    func.displayName = `PlasmicFeatures.${nodeName}`
  }
  return func
}

export const PlasmicFeatures = Object.assign(
  // Top-level PlasmicFeatures renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    section: makeNodeComponent("section"),
    homeCta: makeNodeComponent("homeCta"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicFeatures
    internalVariantProps: PlasmicFeatures__VariantProps,
    internalArgProps: PlasmicFeatures__ArgProps,
  }
)

export default PlasmicFeatures
/* prettier-ignore-end */
